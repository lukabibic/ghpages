{"risc0_gh_branch":null,"risc0_path":"/home/ghrun/actions-runner/_work/risc0/risc0","fast_mode":false,"profiles":[{"name":"syn","version":"2.0.15","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"rand","version":"0.8.5","std":true,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":true},{"name":"libc","version":"0.2.141","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"quote","version":"1.0.26","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"proc-macro2","version":"1.0.56","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"rand_core","version":"0.6.4","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"cfg-if","version":"1.0.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"serde","version":"1.0.160","std":true,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":true},{"name":"autocfg","version":"0.1.8","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"itoa","version":"1.0.6","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"getrandom","version":"0.2.9","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"bitflags","version":"2.2.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"BuildFail","build_errors":"method_name: Starting build for riscv32im-risc0-zkvm-elf\nmethod_name:     Updating crates.io index\nmethod_name: error: failed to select a version for the requirement `bitflags = \"^2.2.0\"`\nmethod_name: candidate versions found which didn't match: 2.1.0, 2.0.2, 2.0.1, ...\nmethod_name: location searched: crates.io index\nmethod_name: required by package `method_name v0.1.0 (/tmp/.tmpOITYc1/template_project/methods/guest)`\n"},"customized":false},{"name":"log","version":"0.4.17","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"rand_chacha","version":"0.3.1","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"unicode-xid","version":"0.2.4","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"serde_derive","version":"1.0.160","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"lazy_static","version":"1.1.1","std":true,"custom_main":"assert_eq!(*EXAMPLE, 42);","import_str":"use lazy_static::lazy_static;\nlazy_static! {\n\tstatic ref EXAMPLE: u8 = 42;\n}","run_prover":true,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":true},{"name":"base64","version":"0.21.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"time","version":"0.3.20","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"serde_json","version":"1.0.96","std":true,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":true},{"name":"memchr","version":"2.5.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"regex","version":"1.7.3","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"parking_lot_core","version":"0.9.7","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"regex-syntax","version":"0.6.29","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"num-traits","version":"0.2.15","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"cc","version":"1.0.79","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"smallvec","version":"1.10.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"parking_lot","version":"0.12.1","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"version_check","version":"0.9.4","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"ryu","version":"1.0.13","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"once_cell","version":"1.17.1","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"strsim","version":"0.10.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"aho-corasick","version":"1.0.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"clap","version":"4.2.4","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"BuildFail","build_errors":"method_name: Starting build for riscv32im-risc0-zkvm-elf\nmethod_name:     Updating crates.io index\nmethod_name:    Compiling libc v0.2.142\nmethod_name:    Compiling io-lifetimes v1.0.10\nmethod_name:    Compiling rustix v0.37.13\nmethod_name:    Compiling bitflags v1.3.2\nmethod_name:    Compiling errno v0.3.1\nmethod_name:    Compiling utf8parse v0.2.1\nmethod_name:    Compiling anstyle v1.0.0\nmethod_name:    Compiling colorchoice v1.0.0\nmethod_name:    Compiling anstyle-query v1.0.0\nmethod_name:    Compiling clap_lex v0.4.1\nmethod_name: error[E0583]: file not found for module `sys`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/lib.rs:26:1\nmethod_name:    |\nmethod_name: 26 | mod sys;\nmethod_name:    | ^^^^^^^^\nmethod_name:    |\nmethod_name:    = help: to create the module `sys`, create file \"/home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/sys.rs\" or \"/home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/sys/mod.rs\"\nmethod_name: \nmethod_name: error[E0425]: cannot find function `with_description` in module `sys`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/lib.rs:47:14\nmethod_name:    |\nmethod_name: 47 |         sys::with_description(*self, |desc| {\nmethod_name:    |              ^^^^^^^^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `with_description` in module `sys`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/lib.rs:58:14\nmethod_name:    |\nmethod_name: 58 |         sys::with_description(*self, |desc| match desc {\nmethod_name:    |              ^^^^^^^^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find value `STRERROR_NAME` in module `sys`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/lib.rs:64:22\nmethod_name:    |\nmethod_name: 64 |                 sys::STRERROR_NAME,\nmethod_name:    |                      ^^^^^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `errno` in module `sys`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/lib.rs:95:10\nmethod_name:    |\nmethod_name: 95 |     sys::errno()\nmethod_name:    |          ^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `set_errno` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/lib.rs:100:10\nmethod_name:     |\nmethod_name: 100 |     sys::set_errno(err)\nmethod_name:     |          ^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: Some errors have detailed explanations: E0425, E0583.\nmethod_name: For more information about an error, try `rustc --explain E0425`.\nmethod_name: error: could not compile `errno` due to 6 previous errors\nmethod_name: warning: build failed, waiting for other jobs to finish...\n"},"customized":false},{"name":"hashbrown","version":"0.13.2","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"semver","version":"1.0.17","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"bytes","version":"1.4.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"digest","version":"0.10.6","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"crossbeam-utils","version":"0.8.15","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"BuildFail","build_errors":"method_name: Starting build for riscv32im-risc0-zkvm-elf\nmethod_name:     Updating crates.io index\nmethod_name:    Compiling crossbeam-utils v0.8.15\nmethod_name: error[E0432]: unresolved imports `core::sync::atomic::AtomicI64`, `core::sync::atomic::AtomicU64`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.15/src/lib.rs:79:49\nmethod_name:    |\nmethod_name: 79 |             pub(crate) use core::sync::atomic::{AtomicI64, AtomicU64};\nmethod_name:    |                                                 ^^^^^^^^^  ^^^^^^^^^ no `AtomicU64` in `sync::atomic`\nmethod_name:    |                                                 |\nmethod_name:    |                                                 no `AtomicI64` in `sync::atomic`\nmethod_name:    |\nmethod_name: help: a similar name exists in the module\nmethod_name:    |\nmethod_name: 79 |             pub(crate) use core::sync::atomic::{AtomicI8, AtomicU64};\nmethod_name:    |                                                 ~~~~~~~~\nmethod_name: help: a similar name exists in the module\nmethod_name:    |\nmethod_name: 79 |             pub(crate) use core::sync::atomic::{AtomicI64, AtomicU8};\nmethod_name:    |                                                            ~~~~~~~~\nmethod_name: \nmethod_name: error[E0412]: cannot find type `AtomicU64` in module `core::sync::atomic`\nmethod_name:     --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.15/src/atomic/consume.rs:78:14\nmethod_name:      |\nmethod_name: 78   |   impl_atomic!(AtomicU64, u64);\nmethod_name:      |                ^^^^^^^^^ help: a struct with a similar name exists: `AtomicU16`\nmethod_name:      |\nmethod_name:     ::: /tmp/.tmpOITYc1/template_project/target/debug/build/methods-4d6bafb84cdbbef8/out/rust-std_4f29d950e101936e934eafe043bfaa02f991c74575a6dfc8647c3c7fbbdede58/library/core/src/sync/atomic.rs:2761:1\nmethod_name:      |\nmethod_name: 2761 | / atomic_int! {\nmethod_name: 2762 | |     cfg(target_has_atomic = \"16\"),\nmethod_name: 2763 | |     cfg(target_has_atomic_equal_alignment = \"16\"),\nmethod_name: 2764 | |     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\nmethod_name: ...    |\nmethod_name: 2778 | |     u16 AtomicU16 ATOMIC_U16_INIT\nmethod_name: 2779 | | }\nmethod_name:      | |_- similarly named struct `AtomicU16` defined here\nmethod_name: \nmethod_name: error[E0412]: cannot find type `AtomicI64` in module `core::sync::atomic`\nmethod_name:     --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.15/src/atomic/consume.rs:80:14\nmethod_name:      |\nmethod_name: 80   |   impl_atomic!(AtomicI64, i64);\nmethod_name:      |                ^^^^^^^^^ help: a struct with a similar name exists: `AtomicI16`\nmethod_name:      |\nmethod_name:     ::: /tmp/.tmpOITYc1/template_project/target/debug/build/methods-4d6bafb84cdbbef8/out/rust-std_4f29d950e101936e934eafe043bfaa02f991c74575a6dfc8647c3c7fbbdede58/library/core/src/sync/atomic.rs:2741:1\nmethod_name:      |\nmethod_name: 2741 | / atomic_int! {\nmethod_name: 2742 | |     cfg(target_has_atomic = \"16\"),\nmethod_name: 2743 | |     cfg(target_has_atomic_equal_alignment = \"16\"),\nmethod_name: 2744 | |     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\nmethod_name: ...    |\nmethod_name: 2758 | |     i16 AtomicI16 ATOMIC_I16_INIT\nmethod_name: 2759 | | }\nmethod_name:      | |_- similarly named struct `AtomicI16` defined here\nmethod_name: \nmethod_name: Some errors have detailed explanations: E0412, E0432.\nmethod_name: For more information about an error, try `rustc --explain E0412`.\nmethod_name: error: could not compile `crossbeam-utils` due to 3 previous errors\n"},"customized":false},{"name":"block-buffer","version":"0.10.4","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"lock_api","version":"0.4.9","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"scopeguard","version":"1.1.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"generic-array","version":"0.14.7","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"num_cpus","version":"1.15.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"byteorder","version":"1.4.3","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"textwrap","version":"0.15.2","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"indexmap","version":"1.9.3","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"num-integer","version":"0.1.45","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"atty","version":"0.2.14","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"BuildFail","build_errors":"method_name: Starting build for riscv32im-risc0-zkvm-elf\nmethod_name:     Updating crates.io index\nmethod_name:    Compiling atty v0.2.14\nmethod_name: error[E0425]: cannot find function `is` in this scope\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/atty-0.2.14/src/lib.rs:98:6\nmethod_name:    |\nmethod_name: 98 |     !is(stream)\nmethod_name:    |      ^^ not found in this scope\nmethod_name: \nmethod_name: For more information about this error, try `rustc --explain E0425`.\nmethod_name: error: could not compile `atty` due to previous error\n"},"customized":false},{"name":"mio","version":"0.8.6","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"percent-encoding","version":"2.2.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"idna","version":"0.3.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"either","version":"1.8.1","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"pin-project-lite","version":"0.2.9","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"ppv-lite86","version":"0.2.17","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"url","version":"2.3.1","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"tokio","version":"1.27.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"heck","version":"0.4.1","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"itertools","version":"0.10.5","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"unicode-width","version":"0.1.10","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"slab","version":"0.4.8","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"thiserror","version":"1.0.40","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"thiserror-impl","version":"1.0.40","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"memoffset","version":"0.8.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"futures","version":"0.3.28","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"unicode-normalization","version":"0.1.22","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"chrono","version":"0.4.24","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"BuildFail","build_errors":"method_name: Starting build for riscv32im-risc0-zkvm-elf\nmethod_name:     Updating crates.io index\nmethod_name:    Compiling num-traits v0.2.15\nmethod_name:    Compiling num-integer v0.1.45\nmethod_name:    Compiling time v0.1.45\nmethod_name: error[E0432]: unresolved import `self::inner`\nmethod_name:  --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.45/src/sys.rs:3:15\nmethod_name:   |\nmethod_name: 3 | pub use self::inner::*;\nmethod_name:   |               ^^^^^ could not find `inner` in `self`\nmethod_name: \nmethod_name: error[E0433]: failed to resolve: could not find `SteadyTime` in `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.45/src/lib.rs:250:25\nmethod_name:     |\nmethod_name: 250 |         SteadyTime(sys::SteadyTime::now())\nmethod_name:     |                         ^^^^^^^^^^ could not find `SteadyTime` in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `get_time` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.45/src/lib.rs:152:28\nmethod_name:     |\nmethod_name: 152 |     let (sec, nsec) = sys::get_time();\nmethod_name:     |                            ^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `get_precise_ns` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.45/src/lib.rs:163:10\nmethod_name:     |\nmethod_name: 163 |     sys::get_precise_ns()\nmethod_name:     |          ^^^^^^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0412]: cannot find type `SteadyTime` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.45/src/lib.rs:245:28\nmethod_name:     |\nmethod_name: 245 | pub struct SteadyTime(sys::SteadyTime);\nmethod_name:     |                            ^^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `time_to_utc_tm` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.45/src/lib.rs:407:10\nmethod_name:     |\nmethod_name: 407 |     sys::time_to_utc_tm(sec, &mut tm);\nmethod_name:     |          ^^^^^^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `time_to_local_tm` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.45/src/lib.rs:421:10\nmethod_name:     |\nmethod_name: 421 |     sys::time_to_local_tm(sec, &mut tm);\nmethod_name:     |          ^^^^^^^^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `utc_tm_to_time` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.45/src/lib.rs:435:23\nmethod_name:     |\nmethod_name: 435 |             0 => sys::utc_tm_to_time(self),\nmethod_name:     |                       ^^^^^^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `local_tm_to_time` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.45/src/lib.rs:436:23\nmethod_name:     |\nmethod_name: 436 |             _ => sys::local_tm_to_time(self)\nmethod_name:     |                       ^^^^^^^^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: Some errors have detailed explanations: E0412, E0425, E0432, E0433.\nmethod_name: For more information about an error, try `rustc --explain E0412`.\nmethod_name: error: could not compile `time` due to 9 previous errors\nmethod_name: warning: build failed, waiting for other jobs to finish...\n"},"customized":false},{"name":"miniz_oxide","version":"0.7.1","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"fnv","version":"1.0.7","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"rustc_version","version":"0.4.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"typenum","version":"1.16.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"unicode-bidi","version":"0.3.13","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"ansi_term","version":"0.12.1","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"anyhow","version":"1.0.70","std":true,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":true},{"name":"futures-core","version":"0.3.28","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"termcolor","version":"1.2.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"pkg-config","version":"0.3.26","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"env_logger","version":"0.10.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"BuildFail","build_errors":"method_name: Starting build for riscv32im-risc0-zkvm-elf\nmethod_name:     Updating crates.io index\nmethod_name:    Compiling libc v0.2.142\nmethod_name:    Compiling log v0.4.17\nmethod_name:    Compiling io-lifetimes v1.0.10\nmethod_name:    Compiling rustix v0.37.13\nmethod_name:    Compiling errno v0.3.1\nmethod_name:    Compiling regex-syntax v0.7.1\nmethod_name:    Compiling humantime v2.1.0\nmethod_name: error[E0583]: file not found for module `sys`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/lib.rs:26:1\nmethod_name:    |\nmethod_name: 26 | mod sys;\nmethod_name:    | ^^^^^^^^\nmethod_name:    |\nmethod_name:    = help: to create the module `sys`, create file \"/home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/sys.rs\" or \"/home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/sys/mod.rs\"\nmethod_name: \nmethod_name: error[E0425]: cannot find function `with_description` in module `sys`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/lib.rs:47:14\nmethod_name:    |\nmethod_name: 47 |         sys::with_description(*self, |desc| {\nmethod_name:    |              ^^^^^^^^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `with_description` in module `sys`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/lib.rs:58:14\nmethod_name:    |\nmethod_name: 58 |         sys::with_description(*self, |desc| match desc {\nmethod_name:    |              ^^^^^^^^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find value `STRERROR_NAME` in module `sys`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/lib.rs:64:22\nmethod_name:    |\nmethod_name: 64 |                 sys::STRERROR_NAME,\nmethod_name:    |                      ^^^^^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `errno` in module `sys`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/lib.rs:95:10\nmethod_name:    |\nmethod_name: 95 |     sys::errno()\nmethod_name:    |          ^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `set_errno` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/errno-0.3.1/src/lib.rs:100:10\nmethod_name:     |\nmethod_name: 100 |     sys::set_errno(err)\nmethod_name:     |          ^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: Some errors have detailed explanations: E0425, E0583.\nmethod_name: For more information about an error, try `rustc --explain E0425`.\nmethod_name: error: could not compile `errno` due to 6 previous errors\nmethod_name: warning: build failed, waiting for other jobs to finish...\n"},"customized":false},{"name":"hyper","version":"0.14.26","std":true,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":true},{"name":"socket2","version":"0.5.2","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"BuildFail","build_errors":"method_name: Starting build for riscv32im-risc0-zkvm-elf\nmethod_name:     Updating crates.io index\nmethod_name:    Compiling socket2 v0.5.2\nmethod_name: error[E0583]: file not found for module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/lib.rs:173:1\nmethod_name:     |\nmethod_name: 173 | mod sys;\nmethod_name:     | ^^^^^^^^\nmethod_name:     |\nmethod_name:     = help: to create the module `sys`, create file \"/home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/sys.rs\" or \"/home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/sys/mod.rs\"\nmethod_name: \nmethod_name: error: Socket2 doesn't support the compile target\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/lib.rs:176:1\nmethod_name:     |\nmethod_name: 176 | compile_error!(\"Socket2 doesn't support the compile target\");\nmethod_name:     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nmethod_name: \nmethod_name: error[E0432]: unresolved imports `crate::sys::c_int`, `crate::sys::sa_family_t`, `crate::sys::sockaddr`, `crate::sys::sockaddr_in`, `crate::sys::sockaddr_in6`, `crate::sys::sockaddr_storage`, `crate::sys::socklen_t`, `crate::sys::AF_INET`, `crate::sys::AF_INET6`, `crate::sys::AF_UNIX`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/sockaddr.rs:11:5\nmethod_name:    |\nmethod_name: 11 |     c_int, sa_family_t, sockaddr, sockaddr_in, sockaddr_in6, sockaddr_storage, socklen_t, AF_INET,\nmethod_name:    |     ^^^^^  ^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^ no `AF_INET` in `sys`\nmethod_name:    |     |      |            |         |            |             |                 |\nmethod_name:    |     |      |            |         |            |             |                 no `socklen_t` in `sys`\nmethod_name:    |     |      |            |         |            |             no `sockaddr_storage` in `sys`\nmethod_name:    |     |      |            |         |            no `sockaddr_in6` in `sys`\nmethod_name:    |     |      |            |         no `sockaddr_in` in `sys`\nmethod_name:    |     |      |            no `sockaddr` in `sys`\nmethod_name:    |     |      no `sa_family_t` in `sys`\nmethod_name:    |     no `c_int` in `sys`\nmethod_name: 12 |     AF_INET6, AF_UNIX,\nmethod_name:    |     ^^^^^^^^  ^^^^^^^ no `AF_UNIX` in `sys`\nmethod_name:    |     |\nmethod_name:    |     no `AF_INET6` in `sys`\nmethod_name:    |\nmethod_name: help: consider importing one of these items instead\nmethod_name:    |\nmethod_name: 11 |     core::ffi::c_int;\nmethod_name:    |\nmethod_name: 11 |     std::ffi::c_int;\nmethod_name:    |\nmethod_name: 11 |     std::os::raw::c_int;\nmethod_name:    |\nmethod_name: help: consider importing this module instead\nmethod_name:    |\nmethod_name: 11 |     c_int, sa_family_t, crate::sockaddr;\nmethod_name:    |                         ~~~~~~~~~~~~~~~~\nmethod_name: \nmethod_name: error[E0432]: unresolved imports `crate::sys::c_int`, `crate::sys::getsockopt`, `crate::sys::setsockopt`, `crate::sys::Bool`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/socket.rs:23:24\nmethod_name:    |\nmethod_name: 23 | use crate::sys::{self, c_int, getsockopt, setsockopt, Bool};\nmethod_name:    |                        ^^^^^  ^^^^^^^^^^  ^^^^^^^^^^  ^^^^ no `Bool` in `sys`\nmethod_name:    |                        |      |           |\nmethod_name:    |                        |      |           no `setsockopt` in `sys`\nmethod_name:    |                        |      no `getsockopt` in `sys`\nmethod_name:    |                        no `c_int` in `sys`\nmethod_name:    |\nmethod_name: help: consider importing one of these items instead\nmethod_name:    |\nmethod_name: 23 | use crate::sys::{self, core::ffi::c_int;\nmethod_name:    |                        ~~~~~~~~~~~~~~~~~\nmethod_name: 23 | use crate::sys::{self, std::ffi::c_int;\nmethod_name:    |                        ~~~~~~~~~~~~~~~~\nmethod_name: 23 | use crate::sys::{self, std::os::raw::c_int;\nmethod_name:    |                        ~~~~~~~~~~~~~~~~~~~~\nmethod_name: \nmethod_name: error[E0432]: unresolved import `sys::c_int`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/lib.rs:178:5\nmethod_name:     |\nmethod_name: 178 | use sys::c_int;\nmethod_name:     |     ^^^^^^^^^^ no `c_int` in `sys`\nmethod_name:     |\nmethod_name: help: consider importing one of these items instead\nmethod_name:     |\nmethod_name: 178 | use core::ffi::c_int;\nmethod_name:     |     ~~~~~~~~~~~~~~~~~\nmethod_name: 178 | use std::ffi::c_int;\nmethod_name:     |     ~~~~~~~~~~~~~~~~\nmethod_name: 178 | use std::os::raw::c_int;\nmethod_name:     |     ~~~~~~~~~~~~~~~~~~~~\nmethod_name: \nmethod_name: error[E0433]: failed to resolve: could not find `MaybeUninitSlice` in `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/lib.rs:391:31\nmethod_name:     |\nmethod_name: 391 |         MaybeUninitSlice(sys::MaybeUninitSlice::new(buf))\nmethod_name:     |                               ^^^^^^^^^^^^^^^^ could not find `MaybeUninitSlice` in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `unix_sockaddr` in module `crate::sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/sockaddr.rs:153:21\nmethod_name:     |\nmethod_name: 153 |         crate::sys::unix_sockaddr(path.as_ref())\nmethod_name:     |                     ^^^^^^^^^^^^^ not found in `crate::sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `from_in_addr` in module `crate::sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/sockaddr.rs:221:34\nmethod_name:     |\nmethod_name: 221 |             let ip = crate::sys::from_in_addr(addr.sin_addr);\nmethod_name:     |                                  ^^^^^^^^^^^^ not found in `crate::sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `from_in6_addr` in module `crate::sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/sockaddr.rs:228:34\nmethod_name:     |\nmethod_name: 228 |             let ip = crate::sys::from_in6_addr(addr.sin6_addr);\nmethod_name:     |                                  ^^^^^^^^^^^^^ not found in `crate::sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `to_in_addr` in module `crate::sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/sockaddr.rs:290:44\nmethod_name:     |\nmethod_name: 290 |             storage.sin_addr = crate::sys::to_in_addr(addr.ip());\nmethod_name:     |                                            ^^^^^^^^^^ not found in `crate::sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `to_in6_addr` in module `crate::sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/sockaddr.rs:306:45\nmethod_name:     |\nmethod_name: 306 |             storage.sin6_addr = crate::sys::to_in6_addr(addr.ip());\nmethod_name:     |                                             ^^^^^^^^^^^ not found in `crate::sys`\nmethod_name: \nmethod_name: error[E0412]: cannot find type `Socket` in module `sys`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/socket.rs:87:38\nmethod_name:    |\nmethod_name: 87 |     pub(crate) fn from_raw(raw: sys::Socket) -> Socket {\nmethod_name:    |                                      ^^^^^^ not found in `sys`\nmethod_name:    |\nmethod_name: help: consider importing this struct\nmethod_name:    |\nmethod_name: 9  | use crate::Socket;\nmethod_name:    |\nmethod_name: help: if you import `Socket`, refer to it directly\nmethod_name:    |\nmethod_name: 87 -     pub(crate) fn from_raw(raw: sys::Socket) -> Socket {\nmethod_name: 87 +     pub(crate) fn from_raw(raw: Socket) -> Socket {\nmethod_name:    |\nmethod_name: \nmethod_name: error[E0425]: cannot find function `socket_from_raw` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/socket.rs:105:22\nmethod_name:     |\nmethod_name: 105 |                 sys::socket_from_raw(raw)\nmethod_name:     |                      ^^^^^^^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0412]: cannot find type `Socket` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/socket.rs:110:41\nmethod_name:     |\nmethod_name: 110 |     pub(crate) fn as_raw(&self) -> sys::Socket {\nmethod_name:     |                                         ^^^^^^ not found in `sys`\nmethod_name:     |\nmethod_name: help: consider importing this struct\nmethod_name:     |\nmethod_name: 9   | use crate::Socket;\nmethod_name:     |\nmethod_name: help: if you import `Socket`, refer to it directly\nmethod_name:     |\nmethod_name: 110 -     pub(crate) fn as_raw(&self) -> sys::Socket {\nmethod_name: 110 +     pub(crate) fn as_raw(&self) -> Socket {\nmethod_name:     |\nmethod_name: \nmethod_name: error[E0425]: cannot find function `socket_as_raw` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/socket.rs:111:14\nmethod_name:     |\nmethod_name: 111 |         sys::socket_as_raw(&self.inner)\nmethod_name:     |              ^^^^^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0412]: cannot find type `Socket` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/socket.rs:114:42\nmethod_name:     |\nmethod_name: 114 |     pub(crate) fn into_raw(self) -> sys::Socket {\nmethod_name:     |                                          ^^^^^^ not found in `sys`\nmethod_name:     |\nmethod_name: help: consider importing this struct\nmethod_name:     |\nmethod_name: 9   | use crate::Socket;\nmethod_name:     |\nmethod_name: help: if you import `Socket`, refer to it directly\nmethod_name:     |\nmethod_name: 114 -     pub(crate) fn into_raw(self) -> sys::Socket {\nmethod_name: 114 +     pub(crate) fn into_raw(self) -> Socket {\nmethod_name:     |\nmethod_name: \nmethod_name: error[E0425]: cannot find function `socket_into_raw` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/socket.rs:115:14\nmethod_name:     |\nmethod_name: 115 |         sys::socket_into_raw(self.inner)\nmethod_name:     |              ^^^^^^^^^^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `socket` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/socket.rs:140:14\nmethod_name:     |\nmethod_name: 140 |         sys::socket(domain.0, ty.0, protocol).map(Socket::from_raw)\nmethod_name:     |              ^^^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `bind` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/socket.rs:185:14\nmethod_name:     |\nmethod_name: 185 |         sys::bind(self.as_raw(), address)\nmethod_name:     |              ^^^^ not found in `sys`\nmethod_name: \nmethod_name: error[E0425]: cannot find function `connect` in module `sys`\nmethod_name:    --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.5.2/src/socket.rs:204:14\nmethod_name:     |\nmethod_name: 204 |         sys::connect(self.as_raw(), address)\n"},"customized":false},{"name":"futures-util","version":"0.3.28","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"tokio-util","version":"0.7.7","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"futures-task","version":"0.3.28","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"toml","version":"0.7.3","std":true,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":true},{"name":"futures-sink","version":"0.3.28","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"futures-channel","version":"0.3.28","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"crossbeam-channel","version":"0.5.8","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"BuildFail","build_errors":"method_name: Starting build for riscv32im-risc0-zkvm-elf\nmethod_name:     Updating crates.io index\nmethod_name:    Compiling crossbeam-utils v0.8.15\nmethod_name: error[E0432]: unresolved imports `core::sync::atomic::AtomicI64`, `core::sync::atomic::AtomicU64`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.15/src/lib.rs:79:49\nmethod_name:    |\nmethod_name: 79 |             pub(crate) use core::sync::atomic::{AtomicI64, AtomicU64};\nmethod_name:    |                                                 ^^^^^^^^^  ^^^^^^^^^ no `AtomicU64` in `sync::atomic`\nmethod_name:    |                                                 |\nmethod_name:    |                                                 no `AtomicI64` in `sync::atomic`\nmethod_name:    |\nmethod_name: help: a similar name exists in the module\nmethod_name:    |\nmethod_name: 79 |             pub(crate) use core::sync::atomic::{AtomicI8, AtomicU64};\nmethod_name:    |                                                 ~~~~~~~~\nmethod_name: help: a similar name exists in the module\nmethod_name:    |\nmethod_name: 79 |             pub(crate) use core::sync::atomic::{AtomicI64, AtomicU8};\nmethod_name:    |                                                            ~~~~~~~~\nmethod_name: \nmethod_name: error[E0412]: cannot find type `AtomicU64` in module `core::sync::atomic`\nmethod_name:     --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.15/src/atomic/consume.rs:78:14\nmethod_name:      |\nmethod_name: 78   |   impl_atomic!(AtomicU64, u64);\nmethod_name:      |                ^^^^^^^^^ help: a struct with a similar name exists: `AtomicU16`\nmethod_name:      |\nmethod_name:     ::: /tmp/.tmpOITYc1/template_project/target/debug/build/methods-4d6bafb84cdbbef8/out/rust-std_4f29d950e101936e934eafe043bfaa02f991c74575a6dfc8647c3c7fbbdede58/library/core/src/sync/atomic.rs:2761:1\nmethod_name:      |\nmethod_name: 2761 | / atomic_int! {\nmethod_name: 2762 | |     cfg(target_has_atomic = \"16\"),\nmethod_name: 2763 | |     cfg(target_has_atomic_equal_alignment = \"16\"),\nmethod_name: 2764 | |     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\nmethod_name: ...    |\nmethod_name: 2778 | |     u16 AtomicU16 ATOMIC_U16_INIT\nmethod_name: 2779 | | }\nmethod_name:      | |_- similarly named struct `AtomicU16` defined here\nmethod_name: \nmethod_name: error[E0412]: cannot find type `AtomicI64` in module `core::sync::atomic`\nmethod_name:     --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.15/src/atomic/consume.rs:80:14\nmethod_name:      |\nmethod_name: 80   |   impl_atomic!(AtomicI64, i64);\nmethod_name:      |                ^^^^^^^^^ help: a struct with a similar name exists: `AtomicI16`\nmethod_name:      |\nmethod_name:     ::: /tmp/.tmpOITYc1/template_project/target/debug/build/methods-4d6bafb84cdbbef8/out/rust-std_4f29d950e101936e934eafe043bfaa02f991c74575a6dfc8647c3c7fbbdede58/library/core/src/sync/atomic.rs:2741:1\nmethod_name:      |\nmethod_name: 2741 | / atomic_int! {\nmethod_name: 2742 | |     cfg(target_has_atomic = \"16\"),\nmethod_name: 2743 | |     cfg(target_has_atomic_equal_alignment = \"16\"),\nmethod_name: 2744 | |     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\nmethod_name: ...    |\nmethod_name: 2758 | |     i16 AtomicI16 ATOMIC_I16_INIT\nmethod_name: 2759 | | }\nmethod_name:      | |_- similarly named struct `AtomicI16` defined here\nmethod_name: \nmethod_name: Some errors have detailed explanations: E0412, E0432.\nmethod_name: For more information about an error, try `rustc --explain E0412`.\nmethod_name: error: could not compile `crossbeam-utils` due to 3 previous errors\n"},"customized":false},{"name":"crossbeam-epoch","version":"0.9.14","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":true,"results":{"status":"BuildFail","build_errors":"method_name: Starting build for riscv32im-risc0-zkvm-elf\nmethod_name:     Updating git repository `https://github.com/risc0/crossbeam`\nmethod_name:     Updating crates.io index\nmethod_name: warning: Patch `crossbeam v0.8.2 (https://github.com/risc0/crossbeam?rev=b25eb50f8c193f36dacb6739692261ea96827bb7#b25eb50f)` was not used in the crate graph.\nmethod_name: Patch `crossbeam-channel v0.5.6 (https://github.com/risc0/crossbeam?rev=b25eb50f8c193f36dacb6739692261ea96827bb7#b25eb50f)` was not used in the crate graph.\nmethod_name: Patch `crossbeam-utils v0.8.14 (https://github.com/risc0/crossbeam?rev=b25eb50f8c193f36dacb6739692261ea96827bb7#b25eb50f)` was not used in the crate graph.\nmethod_name: Check that the patched package version and available features are compatible\nmethod_name: with the dependency requirements. If the patch has a different version from\nmethod_name: what is locked in the Cargo.lock file, run `cargo update` to use the new\nmethod_name: version. This may also occur with an optional dependency that is not enabled.\nmethod_name:    Compiling crossbeam-epoch v0.9.14\nmethod_name:    Compiling crossbeam-utils v0.8.15\nmethod_name: error[E0432]: unresolved imports `core::sync::atomic::AtomicI64`, `core::sync::atomic::AtomicU64`\nmethod_name:   --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.15/src/lib.rs:79:49\nmethod_name:    |\nmethod_name: 79 |             pub(crate) use core::sync::atomic::{AtomicI64, AtomicU64};\nmethod_name:    |                                                 ^^^^^^^^^  ^^^^^^^^^ no `AtomicU64` in `sync::atomic`\nmethod_name:    |                                                 |\nmethod_name:    |                                                 no `AtomicI64` in `sync::atomic`\nmethod_name:    |\nmethod_name: help: a similar name exists in the module\nmethod_name:    |\nmethod_name: 79 |             pub(crate) use core::sync::atomic::{AtomicI8, AtomicU64};\nmethod_name:    |                                                 ~~~~~~~~\nmethod_name: help: a similar name exists in the module\nmethod_name:    |\nmethod_name: 79 |             pub(crate) use core::sync::atomic::{AtomicI64, AtomicU8};\nmethod_name:    |                                                            ~~~~~~~~\nmethod_name: \nmethod_name: error[E0412]: cannot find type `AtomicU64` in module `core::sync::atomic`\nmethod_name:     --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.15/src/atomic/consume.rs:78:14\nmethod_name:      |\nmethod_name: 78   |   impl_atomic!(AtomicU64, u64);\nmethod_name:      |                ^^^^^^^^^ help: a struct with a similar name exists: `AtomicU16`\nmethod_name:      |\nmethod_name:     ::: /tmp/.tmpOITYc1/template_project/target/debug/build/methods-4d6bafb84cdbbef8/out/rust-std_4f29d950e101936e934eafe043bfaa02f991c74575a6dfc8647c3c7fbbdede58/library/core/src/sync/atomic.rs:2761:1\nmethod_name:      |\nmethod_name: 2761 | / atomic_int! {\nmethod_name: 2762 | |     cfg(target_has_atomic = \"16\"),\nmethod_name: 2763 | |     cfg(target_has_atomic_equal_alignment = \"16\"),\nmethod_name: 2764 | |     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\nmethod_name: ...    |\nmethod_name: 2778 | |     u16 AtomicU16 ATOMIC_U16_INIT\nmethod_name: 2779 | | }\nmethod_name:      | |_- similarly named struct `AtomicU16` defined here\nmethod_name: \nmethod_name: error[E0412]: cannot find type `AtomicI64` in module `core::sync::atomic`\nmethod_name:     --> /home/ghrun/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.15/src/atomic/consume.rs:80:14\nmethod_name:      |\nmethod_name: 80   |   impl_atomic!(AtomicI64, i64);\nmethod_name:      |                ^^^^^^^^^ help: a struct with a similar name exists: `AtomicI16`\nmethod_name:      |\nmethod_name:     ::: /tmp/.tmpOITYc1/template_project/target/debug/build/methods-4d6bafb84cdbbef8/out/rust-std_4f29d950e101936e934eafe043bfaa02f991c74575a6dfc8647c3c7fbbdede58/library/core/src/sync/atomic.rs:2741:1\nmethod_name:      |\nmethod_name: 2741 | / atomic_int! {\nmethod_name: 2742 | |     cfg(target_has_atomic = \"16\"),\nmethod_name: 2743 | |     cfg(target_has_atomic_equal_alignment = \"16\"),\nmethod_name: 2744 | |     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\nmethod_name: ...    |\nmethod_name: 2758 | |     i16 AtomicI16 ATOMIC_I16_INIT\nmethod_name: 2759 | | }\nmethod_name:      | |_- similarly named struct `AtomicI16` defined here\nmethod_name: \nmethod_name: Some errors have detailed explanations: E0412, E0432.\nmethod_name: For more information about an error, try `rustc --explain E0412`.\nmethod_name: error: could not compile `crossbeam-utils` due to 3 previous errors\nmethod_name: warning: build failed, waiting for other jobs to finish...\n"},"customized":true},{"name":"thread_local","version":"1.1.7","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"sha2","version":"0.10.6","std":true,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":true},{"name":"futures-io","version":"0.3.28","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"winapi","version":"0.3.9","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"http","version":"0.2.9","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"tracing","version":"0.1.37","std":true,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":true},{"name":"nom","version":"7.1.3","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"pin-utils","version":"0.1.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"tracing-core","version":"0.1.30","std":true,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":true},{"name":"arrayvec","version":"0.7.2","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"tinyvec","version":"1.6.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false},{"name":"httparse","version":"1.8.0","std":false,"custom_main":null,"import_str":null,"run_prover":false,"should_fail":false,"inject_cc_flags":false,"crossbeam_patch":false,"results":{"status":"Success","build_errors":null},"customized":false}]}